{"version":3,"sources":["components/Utils/assets/logo.svg","components/Utils/assets/loading.svg","components/Utils/assets/intro.mp3","components/Utils/assets/cards/luke-skywalker.jpg","components/Utils/assets/cards/c-3po.jpg","components/Utils/assets/cards/r2-d2.jpg","components/Utils/assets/cards/darthvader.jpg","components/Utils/assets/cards/Leia.jpg","components/Utils/assets/cards/uncle.jpg","components/Utils/assets/cards/beru.jpg","components/Utils/assets/cards/r5-d4.jpg","components/Utils/assets/cards/biggs.jpg","components/Utils/assets/cards/obi-wan.jpg","components/Utils/assets/cards/alderaan.jpg","components/Utils/assets/cards/yavin.jpg","components/Utils/assets/cards/hoth.jpg","components/Utils/assets/cards/dagobah.jpg","components/Utils/assets/cards/bespin.jpg","components/Utils/assets/cards/endor.jpg","components/Utils/assets/cards/noboo.jpg","components/Utils/assets/cards/cruscant.jpg","components/Utils/assets/cards/kamino.jpg","components/Utils/assets/cards/geonosis.jpg","components/Utils/assets/cards/sand.jpg","components/Utils/assets/cards/skyhopper.jpg","components/Utils/assets/cards/landspeeder.jpg","components/Utils/assets/cards/tie.jpg","components/Utils/assets/cards/snowspeed.jpg","components/Utils/assets/cards/bomber.jpg","components/Utils/assets/cards/at-at.jpg","components/Utils/assets/cards/at-st.jpg","components/Utils/assets/cards/pod.jpg","components/Utils/assets/cards/sail.jpg","components/Utils/assets/cards/star-true.svg","components/Utils/assets/cards/star-false.svg","components/Header/index.js","components/Nav/index.js","components/Loading/index.js","components/Utils/cardImage.js","components/Card/index.js","components/Intro/index.js","components/NoFavs/index.js","components/CardContainer/index.js","components/Utils/API.js","components/App/index.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Header","_ref","getCards","toggleMusic","music","react_default","a","createElement","className","NavLink","to","src","logo","alt","onClick","Nav","favorites","favNumber","length","type","name","Loading","spin","cardImage","Luke Skywalker","require","C-3PO","R2-D2","Darth Vader","Leia Organa","Owen Lars","Beru Whitesun lars","R5-D4","Biggs Darklighter","Obi-Wan Kenobi","Alderaan","Yavin IV","Hoth","Dagobah","Bespin","Endor","Naboo","Coruscant","Kamino","Geonosis","Sand Crawler","T-16 skyhopper","X-34 landspeeder","TIE/LN starfighter","Snowspeeder","TIE bomber","AT-AT","AT-ST","Storm IV Twin-Pod cloud car","Sail barge","true","false","Card","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","updateFavorites","setState","favorite","state","props","cardData","_this2","_this$props","description","keys","map","spec","index","Array","isArray","key","Date","now","join","concat","toUpperCase","Component","Intro","films","randomNumber","Math","round","random","undefined","title","release_date","opening_crawl","NoFavs","CardContainer","data","components_Loading","components_NoFavs","allCards","card","components_Card","components_Intro","filterCards","asyncToGenerator","regenerator_default","mark","_callee","result","wrap","_context","prev","next","checkLocalStorage","abrupt","t0","fetchData","getFilms","sent","getPeople","getPlanets","getVehicles","getFavorites","stop","_x","apply","arguments","_ref2","_callee2","func","response","results","_context2","fetch","json","setLocalStorage","_x2","_x3","value","localStorage","getItem","JSON","parse","filter","cards","forEach","setItem","stringify","toConsumableArray","_ref3","_callee3","_context3","slice","_x4","_ref4","_callee5","unresolvedPromises","_context5","_ref5","_callee4","character","worldResponse","homeworld","species","_context4","getSpecies","population","numberWithCommas","_x6","Promise","all","_x5","_ref6","_callee6","_context6","_x7","_ref7","_callee8","_context8","_ref8","_callee7","planet","residentResponse","_context7","residents","getResidents","terrain","climate","_x9","_x8","_ref9","_callee10","_context10","_ref10","_callee9","resident","_context9","_x11","_x10","_ref11","_callee11","_context11","vehicle","model","class","vehicle_class","Passengers","passengers","_x12","number","toString","replace","App","audio","play","pause","includes","defineProperty","people","planets","vehicles","Audio","themeSong","window","location","pathname","_this$state","components_Header","components_Nav","Route","path","render","components_CardContainer","Boolean","hostname","match","router","BrowserRouter","components_App","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.aab1d8e7.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.32bbee51.svg\";","module.exports = __webpack_public_path__ + \"static/media/loading.67fe0b45.svg\";","module.exports = __webpack_public_path__ + \"static/media/intro.2351d183.mp3\";","module.exports = __webpack_public_path__ + \"static/media/luke-skywalker.e6818dc9.jpg\";","module.exports = __webpack_public_path__ + \"static/media/c-3po.89ab994a.jpg\";","module.exports = __webpack_public_path__ + \"static/media/r2-d2.964622df.jpg\";","module.exports = __webpack_public_path__ + \"static/media/darthvader.7e495aea.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Leia.91ed31c6.jpg\";","module.exports = __webpack_public_path__ + \"static/media/uncle.55871c60.jpg\";","module.exports = __webpack_public_path__ + \"static/media/beru.1f711a5b.jpg\";","module.exports = __webpack_public_path__ + \"static/media/r5-d4.f362b49a.jpg\";","module.exports = __webpack_public_path__ + \"static/media/biggs.bf02e5b3.jpg\";","module.exports = __webpack_public_path__ + \"static/media/obi-wan.14452f35.jpg\";","module.exports = __webpack_public_path__ + \"static/media/alderaan.1ada9bad.jpg\";","module.exports = __webpack_public_path__ + \"static/media/yavin.79158cb4.jpg\";","module.exports = __webpack_public_path__ + \"static/media/hoth.4b87d506.jpg\";","module.exports = __webpack_public_path__ + \"static/media/dagobah.37973e60.jpg\";","module.exports = __webpack_public_path__ + \"static/media/bespin.c7062e4f.jpg\";","module.exports = __webpack_public_path__ + \"static/media/endor.6ef03859.jpg\";","module.exports = __webpack_public_path__ + \"static/media/noboo.24c7b650.jpg\";","module.exports = __webpack_public_path__ + \"static/media/cruscant.0d30b9ff.jpg\";","module.exports = __webpack_public_path__ + \"static/media/kamino.53e45565.jpg\";","module.exports = __webpack_public_path__ + \"static/media/geonosis.21d8e596.jpg\";","module.exports = __webpack_public_path__ + \"static/media/sand.a3fd37ab.jpg\";","module.exports = __webpack_public_path__ + \"static/media/skyhopper.6411bbf3.jpg\";","module.exports = __webpack_public_path__ + \"static/media/landspeeder.fe024e8b.jpg\";","module.exports = __webpack_public_path__ + \"static/media/tie.91d99af2.jpg\";","module.exports = __webpack_public_path__ + \"static/media/snowspeed.927a9a30.jpg\";","module.exports = __webpack_public_path__ + \"static/media/bomber.bf5ba4ff.jpg\";","module.exports = __webpack_public_path__ + \"static/media/at-at.cc2f2108.jpg\";","module.exports = __webpack_public_path__ + \"static/media/at-st.a74aa15f.jpg\";","module.exports = __webpack_public_path__ + \"static/media/pod.48f35a90.jpg\";","module.exports = __webpack_public_path__ + \"static/media/sail.838c288e.jpg\";","module.exports = __webpack_public_path__ + \"static/media/star-true.3dd8963f.svg\";","module.exports = __webpack_public_path__ + \"static/media/star-false.7991d3aa.svg\";","import React from 'react';\nimport { NavLink } from 'react-router-dom'\nimport PropTypes from 'prop-types';\n\n\nimport logo from '../Utils/assets/logo.svg'\n\nimport './Header.css';\n\nconst Header = ( { getCards, toggleMusic, music }) => {\n  \n  return (\n    <div className=\"header\" >\n    <NavLink to=''>\n      <img \n      className='logo' \n      src={logo}\n      alt='Swapi Box Logo'\n      onClick={() => getCards('films')}\n    />\n    </NavLink>\n    <button\n      className='music'\n      onClick={() => toggleMusic()}\n    >{music ? 'Pause Music' : 'Play Music'}\n    </button>\n    </div>\n  )\n}\n\nHeader.propTypes = {\n  getCards: PropTypes.func,\n  toggleMusic: PropTypes.func,\n  music: PropTypes.bool\n}\n\nexport default Header; ","import React from 'react';\nimport { NavLink } from 'react-router-dom'\nimport PropTypes from 'prop-types';\n\nimport './Nav.css';\n\nconst Nav = ( { favorites, getCards } ) => {\nconst favNumber = favorites.length && favorites[0].type !== 'none'\n  ? favorites.length\n  : 0\n\n  return (\n    <div className=\"button-container navbar\">\n      <div className='button'>\n        <NavLink to='/people'\n          name=\"people\"\n          className='people-btn'\n          onClick={() => getCards(\"people\")}\n        >PEOPLE\n        </NavLink>\n      </div>\n      <div className='button'>\n        <NavLink to='/planets'\n          name=\"planets\"\n          className='planets-btn'\n          onClick={() => getCards(\"planets\")}\n        >PLANETS\n        </NavLink>\n      </div>\n      <div className='button'>\n        <NavLink to='/vehicles'\n          name=\"vehicles\"\n          className='vehicles-btn'\n          onClick={() => getCards(\"vehicles\")}\n        >VEHICLES\n        </NavLink>\n      </div>\n      <div className='button end'>\n        <NavLink to='/favorites'\n          name=\"favorites\"\n          className='favorites-btn'\n          onClick={() => getCards(\"favorites\")}\n        >FAVORITES \n          <div className='fav-cont'>\n            {favNumber}\n          </div>\n        </NavLink>\n      </div>\n    </div>\n  ) \n}\n\nNav.propTypes = {\n  getCards: PropTypes.func.isRequired,\n  favorites: PropTypes.array.isRequired\n}\n\nexport default Nav;","import React from 'react';\n\nimport './Loading.css';\nimport spin from '../Utils/assets/loading.svg'\n\n\nconst Loading = () => {\n  return (\n    <div className='loading'>\n    <img className='load' src={spin} alt='loading'/> \n    </div>\n  )\n}\n\nexport default Loading;","const cardImage = {\n  'Luke Skywalker': require('../Utils/assets/cards/luke-skywalker.jpg'),\n  'C-3PO': require('../Utils/assets/cards/c-3po.jpg'),\n  'R2-D2': require('../Utils/assets/cards/r2-d2.jpg'),\n  'Darth Vader': require('../Utils/assets/cards/darthvader.jpg'),\n  'Leia Organa': require('../Utils/assets/cards/Leia.jpg'),\n  'Owen Lars': require('../Utils/assets/cards/uncle.jpg'),\n  'Beru Whitesun lars': require('../Utils/assets/cards/beru.jpg'),\n  'R5-D4': require('../Utils/assets/cards/r5-d4.jpg'),\n  'Biggs Darklighter': require('../Utils/assets/cards/biggs.jpg'),\n  'Obi-Wan Kenobi': require('../Utils/assets/cards/obi-wan.jpg'),\n  'Alderaan': require('../Utils/assets/cards/alderaan.jpg'),\n  'Yavin IV': require('../Utils/assets/cards/yavin.jpg'),\n  'Hoth': require('../Utils/assets/cards/hoth.jpg'),\n  'Dagobah': require('../Utils/assets/cards/dagobah.jpg'),\n  'Bespin': require('../Utils/assets/cards/bespin.jpg'),\n  'Endor': require('../Utils/assets/cards/endor.jpg'),\n  'Naboo': require('../Utils/assets/cards/noboo.jpg'),\n  'Coruscant': require('../Utils/assets/cards/cruscant.jpg'),\n  'Kamino': require('../Utils/assets/cards/kamino.jpg'),\n  'Geonosis': require('../Utils/assets/cards/geonosis.jpg'),\n  'Sand Crawler': require('../Utils/assets/cards/sand.jpg'),\n  'T-16 skyhopper': require('../Utils/assets/cards/skyhopper.jpg'),\n  'X-34 landspeeder': require('../Utils/assets/cards/landspeeder.jpg'),\n  'TIE/LN starfighter': require('../Utils/assets/cards/tie.jpg'),\n  'Snowspeeder': require('../Utils/assets/cards/snowspeed.jpg'),\n  'TIE bomber': require('../Utils/assets/cards/bomber.jpg'),\n  'AT-AT': require('../Utils/assets/cards/at-at.jpg'),\n  'AT-ST': require('../Utils/assets/cards/at-st.jpg'),\n  'Storm IV Twin-Pod cloud car': require('../Utils/assets/cards/pod.jpg'),\n  'Sail barge': require('../Utils/assets/cards/sail.jpg'),\n  true: require('../Utils/assets/cards/star-true.svg'),\n  false: require('../Utils/assets/cards/star-false.svg')\n}\n\nexport default cardImage;","import React, { Component } from 'react';\nimport './Card.css'\nimport cardImage from './../Utils/cardImage.js';\nimport PropTypes from 'prop-types';\n\n\nclass Card extends Component {\n  constructor() {\n    super()\n    this.state = {\n      favorite: false\n    }\n  }\n\n  componentDidMount() {\n    const { favorite } = this.props.cardData\n    return favorite ? this.setState({ favorite }) : null\n  }\n\n  updateFavorites = (name, getCards) => {\n    this.setState( {favorite: !this.state.favorite} )\n    getCards(name)\n  }\n\n  render() {\n    const { favorite } = this.state;\n    const { cardData, getCards } = this.props\n    const { name } = this.props.cardData;\n    const description = Object.keys(cardData).map((spec, index) => {\n      if (spec !== 'type' && spec !== 'name' && spec !== 'favorite' && !Array.isArray(cardData[spec])) {\n        return <li key={Date.now() + index}><span>{spec}</span> {cardData[spec]}</li>\n      } else if (Array.isArray(cardData[spec])) {\n        return <li key={Date.now() + index}><span>{spec}</span> {cardData[spec].join(', ')}</li>\n      }\n      return '';\n    })\n\n    return(\n      <div className='card'>\n        <div className='image-container'>\n          <div onClick={() => this.updateFavorites(name, getCards)}\n          className='favorite-btn'\n          >\n            <img className='star' alt='star' src={`${cardImage[favorite]}`}/>\n          </div>\n          <img src={`${cardImage[name]}`} alt={name} className='character-pic'/>\n        </div>\n        <div className='card-info'>\n          <h4 className='character-name'>{name.toUpperCase()}</h4>\n          <ul>\n            { description }\n          </ul>\n        </div>\n      </div>\n    )\n  }\n}\n\nCard.propTypes = {\n  cardData: PropTypes.object.isRequired,\n  getCards: PropTypes.func\n}\n\nexport default Card;","import React from 'react';\nimport './Intro.css';\nimport PropTypes from 'prop-types';\n\nconst Intro = ({ films }) => {\n  const randomNumber = Math.round(Math.random() * films.length) + 1;\n\n  return (\n    <div>\n    {\n      films[randomNumber] !== undefined &&\n      <div>\n        <div className=\"fade\"></div>\n          <section className=\"star-wars\">\n            <div className=\"crawl\">\n              <div className=\"title\">\n                <h1>{films[randomNumber].title}</h1>\n                <p>{films[randomNumber].release_date}</p> \n              </div>\n              <p>{films[randomNumber].opening_crawl}</p>  \n            </div>\n          </section>\n      </div>\n      }\n    </div>\n  )\n}\n\nIntro.propTypes = {\n  films: PropTypes.array.isRequired\n}\n\nexport default Intro;","import React from 'react';\n\nimport './NoFavs.css';\n\nconst NoFavs = () => {\n  return (\n    <div className='card-container'>\n      <h1 className='no-favs'>PLEASE ADD SOME FAVORITES!</h1>\n    </div> \n  )\n}\n\nexport default NoFavs;\n\n\n","import React from 'react';\n\nimport Loading from '../Loading';\nimport Card from '../Card'\nimport Intro from '../Intro'\nimport NoFavs from '../NoFavs'\nimport './CardContainer.css'\nimport PropTypes from 'prop-types';\n\nconst CardContainer = ({ data, getCards }) => {\n  if (!data.length) {      \n    return (<Loading />)\n  } else if (data[0].type === 'none') {\n    return (<NoFavs />)\n  }\n\n  const allCards = data.map(card => <Card key={card.name} cardData={card} getCards={getCards}/>)\n  return (\n    <div className='card-container'>\n      { data[0].type !== 'films' &&\n        <div className='card-container'>\n        { allCards }\n        </div>\n      }\n      { data[0].type === 'films' &&\n      <Intro films={data} />\n      }\n    </div>\n  )\n}\n\nCardContainer.propTypes = {\n  data: PropTypes.array.isRequired,\n  getCards: PropTypes.func\n}\n\nexport default CardContainer;","export const filterCards = async (type) => {\n  let result;\n\n  if (checkLocalStorage(type)) {\n    return checkLocalStorage(type)\n  }\n\n  switch (type) {\n    case 'films':\n      result = await fetchData(type, getFilms)\n      break;\n    case 'people':\n      result = await fetchData(type, getPeople)\n      break;\n    case 'planets':\n      result = await fetchData(type, getPlanets)\n      break;\n    case 'vehicles':\n      result = await fetchData(type, getVehicles)\n      break;\n    case 'favorites':\n      result = getFavorites();\n      break;\n    default: updateFavorites(type) \n  }\n  return result;\n}\n\nexport const fetchData = async (type, func) => {\n  const response = await fetch(`https://swapi.co/api/${type}`);\n  const data = await response.json();\n  const results = await func(data.results)\n  setLocalStorage(results, type)\n  return results  \n}\n\nexport const checkLocalStorage = (value) => {\n  if (localStorage.getItem('cards')) {\n    const cards = JSON.parse(localStorage.getItem('cards'))\n    const result = cards.filter(card => card.type === value)\n    return result.length ? result : false;\n  } else {\n    return false\n  }\n}\n\nexport const updateFavorites = (name) => {\n  const cards = JSON.parse(localStorage.getItem('cards'))\n  cards.forEach(card => { \n    if (card.name === name) {\n      card.favorite = !card.favorite\n    } \n  })\n  localStorage.setItem('cards', JSON.stringify(cards))\n}\n\nexport const setLocalStorage = (data, type) => {\n  const cards = JSON.parse(localStorage.getItem('cards')) || []\n  const types = cards.filter(card => card.type === type)\n  if (!types.length) {\n    const result = [...cards, ...data]\n    localStorage.setItem('cards', JSON.stringify(result))\n    return\n  } else {\n    return\n  }\n}\n\nexport const getFilms = async (data) => {\n  const result = data.map(data => {\n    return {\n      title: data.title.toUpperCase(),\n      opening_crawl: data.opening_crawl,\n      release_date: data.release_date.slice(0, 4),\n      type: 'films'\n    }\n  })\n  return result;\n}\n\nexport const getFavorites = () => {\n  const cards = JSON.parse(localStorage.getItem('cards')) || []\n  const result = cards.filter(card => card.favorite ) || [ { type: 'none' } ]\n  return result.length ? result : [ { type: 'none' } ] \n}\n\nexport const getPeople = async data => {\n  const unresolvedPromises = data.map(async character => {\n    const worldResponse = await fetch(character.homeworld)\n    const homeworld = await worldResponse.json()\n    const species = await getSpecies(character.species)\n  \n    return { name: character.name,\n             homeworld: homeworld.name, \n             species: species.name, \n             population: numberWithCommas(homeworld.population),\n             type: 'people',\n             favorite: false \n            }\n  })\n  return Promise.all(unresolvedPromises);\n}\n\nexport const getSpecies = async species => {\n  const response = await fetch(species[0]);\n  const result = await response.json()\n  return result\n}\n\nexport const getPlanets = async data => {\n  const unresolvedPromises = data.map(async planet => {\n    if (planet.residents.length) {\n      const residentResponse = await getResidents(planet.residents)  \n      return { name: planet.name,\n        terrain: planet.terrain,\n        climate: planet.climate, \n        population: numberWithCommas(planet.population), \n        residents: residentResponse,\n        type: 'planets',\n        favorite: false \n       }  \n    }\n    return { name: planet.name,\n             terrain: planet.terrain,\n             climate: planet.climate, \n             population: numberWithCommas(planet.population), \n             residents: 'none',\n             type: 'planets',\n             favorite: false \n            }\n  })\n  return Promise.all(unresolvedPromises);\n}\n\nexport const getResidents = async residents => {\n  const unresolvedPromises = residents.map(async resident => {\n    const response = await fetch(resident)\n    const result = await response.json()\n    return result.name\n  })\n  return Promise.all(unresolvedPromises)\n}\n\nexport const getVehicles = async data => {\n  const results = data.map( vehicle => {\n    return { \n      name: vehicle.name,\n      model: vehicle.model, \n      class: vehicle.vehicle_class, \n      Passengers: vehicle.passengers,\n      type: 'vehicles',\n      favorite: false \n    }\n  })\n  return results;\n}\n\nexport const numberWithCommas = (number) => {\n  return number.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n}","import React, { Component } from 'react';\nimport { Route } from 'react-router-dom'\nimport Header from '../Header';\nimport Nav from '../Nav';\nimport CardContainer from '../CardContainer';\nimport { filterCards } from '../Utils/API';\n\nimport themeSong from '../Utils/assets/intro.mp3'\nimport './App.css';\n\n\nclass App extends Component {\n  constructor() {\n    super()\n    this.state = {\n      films: [],\n      people: [],\n      planets: [],\n      vehicles: [],\n      favorites: [],\n      music: false,\n      audio: new Audio(themeSong)\n    }\n  }\n\n  componentDidMount() {\n    let type = window.location.pathname.slice(1) || 'films' \n    this.getCards(type);\n    this.getCards('favorites')\n    this.toggleMusic()\n  }\n  \n  toggleMusic = async() => {\n    await this.setState( { music: !this.state.music } )\n    this.state.music ? this.state.audio.play() : this.state.audio.pause();\n  }\n\n  getCards = async (type) =>  {\n    const data = await filterCards(type);\n    const types = ['films', 'people', 'vehicles', 'planets', 'favorites']\n    if (types.includes(type)) {\n      this.setState({ [type]: data });\n    } else {\n      const favorites = await filterCards('favorites');\n      this.setState( { favorites } )\n    }\n  }\n\n  render() {\n    const { favorites, music } = this.state\n    return (\n      <div>\n        <Header getCards={this.getCards}\n          toggleMusic={this.toggleMusic}\n          music={music}    \n        />\n        <Nav getCards={this.getCards} \n          favorites={favorites} \n        />\n        <Route path={('/swapibox'||'/people'||'/planets'||'/vehicles'||'/favorites')}\n          render={() => {\n            const type = window.location.pathname.slice(1) || 'films' \n            return <CardContainer data={this.state[type]} getCards={this.getCards} />\n            }\n          }    \n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n// import { Provider } from 'react-redux';\n// import { createStore } from 'redux';\nimport { BrowserRouter } from 'react-router-dom';\n\nconst router = (\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>\n)\n\nReactDOM.render(router, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n\n"],"sourceRoot":""}